{"version":3,"file":"static/js/2.855fc9bd.chunk.js","mappings":"mQAsBA,EArBqB,SAAC,GAAyD,IAAvDA,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC7D,MAAa,cAATF,GAEA,iCACE,2BAAQF,KACR,6BAAUC,YAAaA,GAAiBG,EAASJ,EAAOG,SAK5D,iCACE,2BAAQH,KACR,0BACEK,UAAqB,cAAVL,EACXC,YAAaA,EACbC,KAAMA,GACFE,EAASJ,EAAOG,OAI3B,E,SCiFD,EAhGoB,SAAC,GAAmB,IAAD,YAAhBG,EAAgB,EAAhBA,UACrB,GAIIC,EAAAA,EAAAA,MAHFH,EADF,EACEA,SACAI,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAwBf,OACE,iBAAKE,UAAU,aAAf,WACE,eAAIA,UAAU,0DAAd,4CAGA,iBAAKA,UAAU,0DAAf,WACE,6BACE,gBAAKC,IAAKC,OAGZ,kBAAMF,UAAU,OAAOG,SAAUN,GAhCtB,SAACO,GAChBC,EAAAA,GAAAA,KAEI,kBACA,mBACA,CACEC,UAAWF,EAAOG,KAClBC,WAAYJ,EAAOK,MACnBC,WAAYN,EAAOO,MACnBC,QAASR,EAAOS,aAElB,qBAEDC,MAAK,SAACC,GACLpB,GAAU,GACVqB,QAAQC,IAAIF,EACb,IACAG,OAAM,SAACC,GACNxB,GAAU,GACVqB,QAAQC,IAAIE,EACb,GACJ,IAWK,WACE,SAAC,EAAD,CACEzB,WAAW,EACXH,KAAK,OACLD,YAAY,kBACZD,MAAM,YACNI,SAAUA,EACVD,YAAa,CAAE4B,UAAU,KAGI,cAA9B,UAAAtB,EAAO,oBAAP,eAAqBP,QACpB,cAAGS,UAAU,QAAb,qCAEF,SAAC,EAAD,CACET,KAAK,OACLD,YAAY,kBACZD,MAAM,QACNI,SAAUA,EACVD,YAAa,CACX4B,UAAU,EACVC,QACE,yEAGqB,cAA1B,UAAAvB,EAAM,aAAN,eAAiBP,QAChB,cAAGS,UAAU,QAAb,oCAEyB,aAA1B,UAAAF,EAAM,aAAN,eAAiBP,QAChB,cAAGS,UAAU,QAAb,iCAGF,SAAC,EAAD,CACET,KAAK,MACLD,YAAY,cACZD,MAAM,QACNI,SAAUA,EACVD,YAAa,CAAE8B,UAAW,GAAIC,UAAW,OAEf,eAA1B,UAAAzB,EAAM,aAAN,eAAiBP,OACS,eAA1B,UAAAO,EAAM,aAAN,eAAiBP,SACjB,cAAGS,UAAU,QAAb,+CAEF,SAAC,EAAD,CACET,KAAK,YACLD,YAAY,sBACZD,MAAM,UACNI,SAAUA,EACVD,YAAa,CAAE4B,UAAU,KAEE,cAA5B,UAAAtB,EAAM,eAAN,eAAmBP,QAClB,cAAGS,UAAU,QAAb,qCAEF,mBAAQT,KAAK,SAAb,4BAKT,E,2GCpFD,EAde,SAAC,GAAgB,IAAdiC,EAAa,EAAbA,OAChB,OACE,iBAAKxB,UAAU,sDAAf,WACE,mBAAQA,UAAU,cAAlB,UACE,gBAAKC,IAAKuB,EAASC,EAAUC,OAE/B,uBACGF,EACG,+CACA,qDAIX,ECJD,EATkB,WAChB,OAA4BG,EAAAA,EAAAA,UAAS,MAArC,eAAOH,EAAP,KAAe7B,EAAf,KACA,OACE,gCACc,OAAX6B,IAAmB,SAAC,EAAD,CAAa7B,UAAWA,IAChC,OAAX6B,IAAmB,SAAC,EAAD,CAAQA,OAAQA,MAGzC,C","sources":["pages/ContactMe/Components/ContactInput/ContactInput.js","pages/ContactMe/Components/ContactForm/ContactForm.js","pages/ContactMe/Components/Result/Result.js","pages/ContactMe/ContactMe.js"],"sourcesContent":["import \"./ContactInput.scss\";\r\nconst ContactInput = ({ label, placeholder, type, validations, register }) => {\r\n  if (type === \"text-area\") {\r\n    return (\r\n      <>\r\n        <label>{label}</label>\r\n        <textarea placeholder={placeholder} {...register(label, validations)} />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <label>{label}</label>\r\n      <input\r\n        autoFocus={label === \"Full Name\" ? true : false}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        {...register(label, validations)}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ContactInput;\r\n","import { useForm } from \"react-hook-form\";\r\nimport discuss from \"../../../../assets/Images/discussion.png\";\r\nimport ContactInput from \"../ContactInput/ContactInput\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport \"./ContactForm.scss\";\r\n\r\nconst ContactForm = ({ setResult }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (inputs) => {\r\n    emailjs\r\n      .send(\r\n        \"service_wbc2099\",\r\n        \"template_qygj6nl\",\r\n        {\r\n          from_name: inputs.Name,\r\n          from_email: inputs.Email,\r\n          from_phone: inputs.Phone,\r\n          message: inputs.Description,\r\n        },\r\n        \"g-1CcXqYnn2AP71DO\"\r\n      )\r\n      .then((res) => {\r\n        setResult(true);\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        setResult(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"contact-me\">\r\n      <h1 className=\"contact-me__title animate__animated animate__fadeInDown\">\r\n        Have a project! let's discuss\r\n      </h1>\r\n      <div className=\"contact-me__container animate__animated animate__fadeIn\">\r\n        <figure>\r\n          <img src={discuss}></img>\r\n        </figure>\r\n\r\n        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <ContactInput\r\n            autoFocus={true}\r\n            type=\"text\"\r\n            placeholder=\"e.g: John Smith\"\r\n            label=\"Full Name\"\r\n            register={register}\r\n            validations={{ required: true }}\r\n          />\r\n\r\n          {errors[\"Full Name\"]?.type === \"required\" && (\r\n            <p className=\"error\">This Field in required</p>\r\n          )}\r\n          <ContactInput\r\n            type=\"text\"\r\n            placeholder=\"mail@domain.com\"\r\n            label=\"Email\"\r\n            register={register}\r\n            validations={{\r\n              required: true,\r\n              pattern:\r\n                /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$/,\r\n            }}\r\n          />\r\n          {errors[\"Email\"]?.type === \"required\" && (\r\n            <p className=\"error\">This field is required</p>\r\n          )}\r\n          {errors[\"Email\"]?.type === \"pattern\" && (\r\n            <p className=\"error\">Wrong email format</p>\r\n          )}\r\n\r\n          <ContactInput\r\n            type=\"tel\"\r\n            placeholder=\"01234567890\"\r\n            label=\"Phone\"\r\n            register={register}\r\n            validations={{ minLength: 11, maxLength: 11 }}\r\n          />\r\n          {(errors[\"Phone\"]?.type === \"minLength\" ||\r\n            errors[\"Phone\"]?.type === \"maxLength\") && (\r\n            <p className=\"error\">Phone number should be 11 digits</p>\r\n          )}\r\n          <ContactInput\r\n            type=\"text-area\"\r\n            placeholder=\"What's in your mind\"\r\n            label=\"Message\"\r\n            register={register}\r\n            validations={{ required: true }}\r\n          />\r\n          {errors[\"Message\"]?.type === \"required\" && (\r\n            <p className=\"error\">This field is required</p>\r\n          )}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","import \"./Result.scss\";\r\nimport success from \"../../../../assets/Images/checked.png\";\r\nimport failed from \"../../../../assets/Images/remove.png\";\r\nconst Result = ({ result }) => {\r\n  return (\r\n    <div className=\"result__container animate__animated animate__zoomIn\">\r\n      <figure className=\"result__img\">\r\n        <img src={result ? success : failed} />\r\n      </figure>\r\n      <p>\r\n        {result\r\n          ? \"Thanks for contacting me, I will reply ASAP!\"\r\n          : \"Failed to send your request, please resend it!\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Result;\r\n","import { useState } from \"react\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport Result from \"./Components/Result/Result\";\r\nconst ContactMe = () => {\r\n  const [result, setResult] = useState(null);\r\n  return (\r\n    <>\r\n      {result === null && <ContactForm setResult={setResult} />}\r\n      {result !== null && <Result result={result} />}\r\n    </>\r\n  );\r\n};\r\nexport default ContactMe;\r\n"],"names":["label","placeholder","type","validations","register","autoFocus","setResult","useForm","handleSubmit","errors","formState","className","src","discuss","onSubmit","inputs","emailjs","from_name","Name","from_email","Email","from_phone","Phone","message","Description","then","res","console","log","catch","error","required","pattern","minLength","maxLength","result","success","failed","useState"],"sourceRoot":""}